{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","role","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","backgroundColor","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","filter","element","defaultProps","about","Alert","height","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ba136cb4.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from \"react-router-dom\";\r\n\r\nexport default function Navbar(props){\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to='/about'>{props.about}</Link>\r\n        </li> */}\r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n      <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n      <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Change Color Mode</label>\r\n    </div> \r\n    </div>\r\n  </div>\r\n</nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title:PropTypes.string.isRequired,\r\n  about:PropTypes.string.isRequired,\r\n}\r\nNavbar.defaultProps = {\r\n  title: \"TextUtils\",\r\n  about: \"About Us\",\r\n}\r\n\r\n\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () =>{\r\n        let newText = text.toUpperCase()\r\n        setText(newText)\r\n        props.showAlert(\"Coverted to Uppercase\", 'success')\r\n    }\r\n    const handleLoClick = () =>{\r\n        let newText = text.toLowerCase()\r\n        setText(newText)\r\n        props.showAlert(\"Coverted to Lowercase\", 'success')\r\n    }\r\n    const handleClear = () =>{\r\n        let newText = \"\"\r\n        setText(newText)\r\n        props.showAlert(\"Clear text\", 'success')\r\n    }\r\n\r\n    const handleCopy = () =>{\r\n        navigator.clipboard.writeText(text)\r\n        props.showAlert(\"Copied text\", 'success')\r\n\r\n    }\r\n\r\n    const handleExtraSpace = () =>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra space removed\", 'success')\r\n    }\r\n\r\n\r\n    const [text, setText] = useState('')\r\n\r\n\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value)\r\n    }\r\n    return (\r\n        <>\r\n        <div className='container' style={{color:props.mode==='light'?'black':'white'}}>\r\n            <h1 className='my-2'>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className='form-control' style={{backgroundColor:props.mode==='light'?'white':'#4a39db',color:props.mode==='light'?'black':'white'}} value={text} onChange={handleOnChange} id='myBox' rows=\"8\"></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className='btn btn-primary mx-2' onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button disabled={text.length===0} className='btn btn-primary mx-2' onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button disabled={text.length===0} className='btn btn-primary mx-2' onClick={handleClear}>Clear</button>\r\n            <button disabled={text.length===0} className='btn btn-primary mx-2' onClick={handleCopy}>Copy</button>\r\n            <button disabled={text.length===0} className='btn btn-primary mx-2' onClick={handleExtraSpace}>RemoveSpace</button>\r\n        </div>\r\n        <div className=\"container my-2\" style={{color:props.mode==='light'?'black':'white'}}>\r\n            <h1>Your text summary</h1>\r\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} character</p>\r\n            <p>{0.008*text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes to Read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Type something above to preview it here\"}</p>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word)=>{\r\n    const lower = word.toLowerCase()\r\n    return lower.charAt(0).toUpperCase()+lower.slice(1)\r\n  }\r\n  return (\r\n    <div style={{height:'40px'}}>\r\n    {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n    <strong>{capitalize(props.alert.type)}</strong> {props.alert.msg}\r\n  </div>}\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n\r\n","import './App.css';\nimport React,{useState} from 'react'\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nconst App = () => {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1000);\n  }\n  const toggleMode = () =>{\n    if(mode===\"light\"){\n    setMode(\"dark\")\n    document.body.style.backgroundColor=\"#042a40\" //#042743#040026\n    showAlert(\"Dark Mode is Enable\", 'success')\n\n  }else{\n    setMode(\"light\")\n    document.body.style.backgroundColor=\"white\" \n    showAlert(\"Light Mode is Enable\", 'success')\n\n  }\n  }\n\n    return (\n      <>\n      {/* <Router> */}\n      <Navbar title=\"TextUtils\" about=\"About Us\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      {/* <Switch> */}\n          {/* <Route exact path=\"/\"> */}\n      <TextForm heading=\"Word Counter, Character Counter, Remove Extra Spaces\" showAlert={showAlert} mode={mode}/>\n          {/* </Route> */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route> */}\n        {/* </Switch> */}\n      </div> \n       {/* </Router> */}\n      </>\n    )\n\n}\n\n\n\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}